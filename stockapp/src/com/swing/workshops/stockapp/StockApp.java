/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.swing.workshops.stockapp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class StockApp extends javax.swing.JFrame {

    /**
     * Creates new form StockApp
     */
    public StockApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        labelProductName = new javax.swing.JLabel();
        labelCategory = new javax.swing.JLabel();
        labelProductPrice = new javax.swing.JLabel();
        tfProductName = new javax.swing.JTextField();
        cbCategory = new javax.swing.JComboBox<>();
        tfProductPrice = new javax.swing.JTextField();
        messageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        addProduct = new javax.swing.JButton();
        updateOrderInformation = new javax.swing.JButton();
        deleteProduct = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 100, 0, 0));

        labelProductName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelProductName.setText("Məhsulun adı :");

        labelCategory.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelCategory.setText("Kateqoriya : ");

        labelProductPrice.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelProductPrice.setText("Qiyməti :");

        tfProductName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "İncəsənət", "Qida", "Elektronika" }));

        messageLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(255, 0, 51));

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Məhsulun adı", "Kateqoriya", "Qiymət"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setAutoscrolls(false);
        productTable.setRequestFocusEnabled(false);
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        addProduct.setText("Məhsul əlavə et");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        updateOrderInformation.setText("Məlumatı yenilə");
        updateOrderInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderInformationActionPerformed(evt);
            }
        });

        deleteProduct.setText("Məhsulu sil");
        deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelProductPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfProductName)
                                    .addComponent(cbCategory, 0, 175, Short.MAX_VALUE)
                                    .addComponent(tfProductPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(updateOrderInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE))
                        .addContainerGap(51, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateOrderInformation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProductPrice)
                    .addComponent(tfProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();

        if (tfProductName.getText().trim().equals("") || tfProductPrice.getText().trim().equals("") || tfProductPrice.getText().trim().equals("0")) {
            messageLabel.setText("Məhsul haqqında məlumatları düzgün şəkildə daxil edin.\n");
            return;
        } else {
            Object[] productDetail = {tfProductName.getText(), cbCategory.getSelectedItem().toString(), tfProductPrice.getText()};
            model.addRow(productDetail);
            messageLabel.setText("\"" + tfProductName.getText() + "\", məhsullar siyahısına əlavə edildi. Sıra nömrəsi : " + productTable.getRowCount());
        }
        Timer timer = new Timer(3000, null);
        timer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                messageLabel.setText("");
                timer.stop();
            }
        });
        timer.start();
    }//GEN-LAST:event_addProductActionPerformed

    private void updateOrderInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderInformationActionPerformed
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRow = productTable.getSelectedRow();

        if (selectedRow == -1) {
            if (productTable.getRowCount() == 0) {
                messageLabel.setText("Məhsul siyahısı hal-hazırda boşdur.");
            } else {
                messageLabel.setText("Seçilmiş məhsul yoxdur.");
            }
        } else {
            model.setValueAt(tfProductName.getText(), selectedRow, 0);
            model.setValueAt(cbCategory.getSelectedItem().toString(), selectedRow, 1);
            model.setValueAt(tfProductPrice.getText(), selectedRow, 2);
            messageLabel.setText("Seçilmiş məhsul haqqında məlumatlar yeniləndi. Məhsulun sıra nömrəsi : " + Integer.valueOf(selectedRow + 1));
        }
        Timer timer = new Timer(3000, null);
        timer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                messageLabel.setText("");
                timer.stop();
            }
        });
        timer.start();
    }//GEN-LAST:event_updateOrderInformationActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRow = productTable.getSelectedRow();

        tfProductName.setText(model.getValueAt(selectedRow, 0).toString());
        cbCategory.setSelectedItem(model.getValueAt(selectedRow, 1).toString());
        tfProductPrice.setText(model.getValueAt(selectedRow, 2).toString());
    }//GEN-LAST:event_productTableMouseClicked

    private void deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductActionPerformed
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRow = productTable.getSelectedRow();

        if (selectedRow == -1) {
            if (productTable.getRowCount() == 0) {
                messageLabel.setText("Silməyə məhsul yoxdur.");
            } else {
                messageLabel.setText("Silinəcək məhsulu seçin.");
            }
        } else {
            model.removeRow(selectedRow);
            messageLabel.setText("Seçilmiş məhsul siyahıdan silindi.");
        }
        Timer timer = new Timer(3000, null);
        timer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                messageLabel.setText("");
                timer.stop();
            }
        });
        timer.start();

    }//GEN-LAST:event_deleteProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StockApp().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JButton deleteProduct;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelProductName;
    private javax.swing.JLabel labelProductPrice;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField tfProductName;
    private javax.swing.JTextField tfProductPrice;
    private javax.swing.JButton updateOrderInformation;
    // End of variables declaration//GEN-END:variables
}
